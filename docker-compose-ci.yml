version: "3.9"

services:
  frontend:
    image:  sermalenk/skypro-front:lesson-35
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
  api:
    image:  katerinasys/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    environment:
      POSTGRES_HOST: ${POSGTRES_HOST}
      POSTGRES_USER: ${POSGTRES_USER}
      POSTGRES_PASSWORD: ${POSGTRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
  migrations:
    image:  katerinasys/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES-DB: ${POSTGRES_DB}
        SECRET_KEY: ${SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy

    command: >
      sh -c "python manage.py migrate"

  postgres:
    image: postgres:14.6-alpine
    environment:
      POSTGRES_USER:  ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    ports:
      - "5433:5433"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg_data:

